global:
  postgresql:
    auth:
      database: "iam"
      username: "iam"
      password: "iam"
      postgresPassword: "iam"
primary:
  extraVolumeMounts:
  - mountPath: /etc/ldap
    name: ldap-config
  - mountPath: /etc/ssl/certs/glauth.crt
    subPath: tls.crt
    name: glauth-tls-secrets
  - mountPath: /etc/ssl/certs/glauth.key
    subPath: tls.key
    name: glauth-tls-secrets
  - mountPath: /etc/ssl/certs/glauth-ca.crt
    subPath: ca.crt
    name: glauth-tls-secrets
  extraVolumes:
  - name: ldap-config
    configMap:
      name: ldap-config
      items:
      - key: ldap.conf
        path: ldap.conf
  - name: glauth-tls-secrets
    secret:
      secretName: glauth-tcp-tls
  initdb:
    scripts:
      update-certs.sh: |
        #!/bin/sh

        apt update -y
        apt install -y ca-certificates
        update-ca-certificates
      init.sql: |
        CREATE DATABASE kratos;
        CREATE DATABASE hydra;


readReplicas:
  extraVolumeMounts:
  - mountPath: /etc/ldap
    name: ldap-config
  - mountPath: /etc/ssl/certs/glauth.crt
    subPath: tls.crt
    name: glauth-tls-secrets
  - mountPath: /etc/ssl/certs/glauth.key
    subPath: tls.key
    name: glauth-tls-secrets
  - mountPath: /etc/ssl/certs/glauth-ca.crt
    subPath: ca.crt
    name: glauth-tls-secrets
  extraVolumes:
  - name: ldap-config
    configMap:
      name: ldap-config
      items:
      - key: ldap.conf
        path: ldap.conf
  - name: glauth-tls-secrets
    secret:
      secretName: glauth-tcp-tls

auth:
  database: "iam"
  username: "iam"
  password: "iam"
  postgresPassword: "iam"

audit:
  clientMinMessages: DEBUG

ldap:
  enabled: true
  tls:
    enabled: true
  server: "glauth.default.svc.cluster.local"
  port: "3893"
  basedn: "dc=glauth,dc=com"
  binddn: "cn=serviceuser,ou=svcaccts,ou=users,dc=glauth,dc=com"
  bindpw: "mysecret"
  # ldap.enabled	Enable LDAP support	false
  # ldap.server	IP address or name of the LDAP server.	""
  # ldap.port	Port number on the LDAP server to connect to	""
  # ldap.prefix	String to prepend to the user name when forming the DN to bind	""
  # ldap.suffix	String to append to the user name when forming the DN to bind	""
  # ldap.basedn	Root DN to begin the search for the user in	""
  # ldap.binddn	DN of user to bind to LDAP	""
  # ldap.bindpw	Password for the user to bind to LDAP	""
  # ldap.searchAttribute	Attribute to match against the user name in the search	""
  # ldap.searchFilter	The search filter to use when doing search+bind authentication	""
  # ldap.scheme	Set to ldaps to use LDAPS	""
  # ldap.tls.enabled	Se to true to enable TLS encryption	false
  # ldap.uri	LDAP URL beginning in the form ldap[s]://host[:port]/basedn. If provided, all the other LDAP parameters will be ignored.

